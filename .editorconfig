# Configuration file for EditorConfig.
# See all available configuration variables at https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/categories.
root = true

# Core properties.
[*]
charset = utf-8
end_of_line = lf
indent_size = 4
indent_style = tab
insert_final_newline = true
tab_width = 4
trim_trailing_whitespace = true

# Markdown and Yaml both have a few exceptions for varying syntax reasons.
[*.{md,yml,yaml}]
indent_size = 2
indent_style = space

# All below rules marked with `Default` beside it are using the default values as configured out-of-the-box.
# The reason these rules are even configured at all is due to ReSharper might otherwise set them incorrectly.
# Once ReSharper is phased out, the default rules may be removed from this configuration file to simplify it.

[*.cs]
# Code quality rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules.
# None configured for now.

# Code style rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules.
## Language rules.
### `this` and `Me` preferences.
dotnet_diagnostic.IDE0003.severity = error
dotnet_diagnostic.IDE0009.severity = none
dotnet_style_qualification_for_event = false # Default.
dotnet_style_qualification_for_field = false # Default.
dotnet_style_qualification_for_method = false # Default.
dotnet_style_qualification_for_property = false # Default.

### Use language keywords instead of framework type names for type references.
dotnet_diagnostic.IDE0049.severity = error
dotnet_style_predefined_type_for_locals_parameters_members = true # Default.
dotnet_style_predefined_type_for_member_access = true # Default.

### Modifier preferences.
#### Order modifiers.
dotnet_diagnostic.IDE0036.severity = error
csharp_preferred_modifier_order = public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async # Default.

#### Add accessibility modifiers.
dotnet_diagnostic.IDE0040.severity = error
dotnet_style_require_accessibility_modifiers = always

#### Add readonly modifier.
dotnet_diagnostic.IDE0044.severity = error
dotnet_style_readonly_field = true # Default.

#### Make local function static.
dotnet_diagnostic.IDE0062.severity = error
csharp_prefer_static_local_function = true # Default.

#### Make struct fields writable.
dotnet_diagnostic.IDE0064.severity = error

### Parentheses preferences.
dotnet_diagnostic.IDE0047.severity = none
dotnet_diagnostic.IDE0048.severity = error
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity # Default.
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity # Default.
dotnet_style_parentheses_in_other_operators = never_if_unnecessary # Default.
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity # Default.

### Expression-level preferences.
#### Add missing cases to switch statement.
dotnet_diagnostic.IDE0010.severity = suggestion

#### Use object initializers.
dotnet_diagnostic.IDE0017.severity = error
dotnet_style_object_initializer = true # Default.

#### Inline variable declaration.
dotnet_diagnostic.IDE0017.severity = error
csharp_style_inlined_variable_declaration = true # Default.

#### Use collection initializers.
dotnet_diagnostic.IDE0028.severity = error
dotnet_style_collection_initializer = true # Default.

#### Use explicitly provided tuple name.
dotnet_diagnostic.IDE0033.severity = error
dotnet_style_explicit_tuple_names = true # Default.

#### Simplify `default` expression.
dotnet_diagnostic.IDE0034.severity = error
csharp_prefer_simple_default_expression = true # Default.

#### Use inferred member names.
dotnet_diagnostic.IDE0037.severity = error
dotnet_style_prefer_inferred_anonymous_type_member_names = true # Default.
dotnet_style_prefer_inferred_tuple_names = true # Default.

#### Use local function instead of lambda.
dotnet_diagnostic.IDE0039.severity = error
csharp_style_prefer_local_over_anonymous_function = true # Default.

#### Deconstruct variable declaration.
dotnet_diagnostic.IDE0042.severity = error
csharp_style_deconstructed_variable_declaration = true # Default.

#### Use conditional expression for assignment.
dotnet_diagnostic.IDE0045.severity = error
dotnet_style_prefer_conditional_expression_over_assignment = true # Default.

#### Use conditional expression for return.
dotnet_diagnostic.IDE0046.severity = suggestion # Default.
dotnet_style_prefer_conditional_expression_over_return = true # Default.

#### Use compound assignment.
dotnet_diagnostic.IDE0054.severity = error
dotnet_diagnostic.IDE0074.severity = error
dotnet_style_prefer_compound_assignment = true # Default.

#### Simplify conditional expression.
dotnet_diagnostic.IDE0075.severity = error
dotnet_style_prefer_simplified_boolean_expressions = true # Default.

#### Convert `typeof` to `nameof`.
dotnet_diagnostic.IDE0082.severity = error

#### Simplify `new` expression.
dotnet_diagnostic.IDE0090.severity = error
csharp_style_implicit_object_creation_when_type_is_apparent = true # Default.

#### Use tuple to swap values.
dotnet_diagnostic.IDE0180.severity = error
csharp_style_prefer_tuple_swap = true # Default.

### Namespace declaration preferences.
dotnet_diagnostic.IDE0160.severity = none
dotnet_diagnostic.IDE0161.severity = error
csharp_style_namespace_declarations = file_scoped:silent

### Null-checking preferences.
#### Use throw expression.
dotnet_diagnostic.IDE0016.severity = error
csharp_style_throw_expression = true # Default.

#### Use coalesce expression.
dotnet_diagnostic.IDE0029.severity = error
dotnet_diagnostic.IDE0030.severity = error
dotnet_style_coalesce_expression = true # Default.

#### Use null propagation.
dotnet_diagnostic.IDE0031.severity = error
dotnet_style_null_propagation = true # Default.

#### Use `is null` check.
dotnet_diagnostic.IDE0041.severity = error
dotnet_style_prefer_is_null_check_over_reference_equality_method = true # Default.

#### Prefer `null` check over type check.
dotnet_diagnostic.IDE0150.severity = error
csharp_style_prefer_null_check_over_type_check = true # Default.

#### Use conditional delegate call.
dotnet_diagnostic.IDE1005.severity = error
csharp_style_conditional_delegate_call = true # Default.

### `var` preferences
dotnet_diagnostic.IDE0007.severity = none
dotnet_diagnostic.IDE0008.severity = error
csharp_style_var_for_built_in_types = false # Default.
csharp_style_var_when_type_is_apparent = false # Default.
csharp_style_var_elsewhere = false # Default.

### Expression-bodied-members.
#### Use expression body for constructors.
dotnet_diagnostic.IDE0021.severity = error
csharp_style_expression_bodied_constructors = false:silent# Default.

#### Use expression body for methods.
dotnet_diagnostic.IDE0022.severity = error
csharp_style_expression_bodied_methods = false:silent# Default.

#### Use expression body for operators.
dotnet_diagnostic.IDE0023.severity = error
dotnet_diagnostic.IDE0024.severity = error
csharp_style_expression_bodied_operators = false:silent# Default.

#### Use expression body for properties.
dotnet_diagnostic.IDE0025.severity = error
csharp_style_expression_bodied_properties = true:silent# Default.

#### Use expression body for indexers.
dotnet_diagnostic.IDE0026.severity = error
csharp_style_expression_bodied_indexers = true:silent# Default.

#### Use expression body for accessors.
dotnet_diagnostic.IDE0027.severity = error
csharp_style_expression_bodied_accessors = true:silent# Default.

#### Use expression body for lambdas.
dotnet_diagnostic.IDE0053.severity = error
csharp_style_expression_bodied_lambdas = true:silent# Default.

#### Use expression body for local functions.
dotnet_diagnostic.IDE0061.severity = error
csharp_style_expression_bodied_local_functions = false:silent# Default.

### Pattern matching preferences.
#### Use pattern matching to avoid `as` followed by a `null` check.
dotnet_diagnostic.IDE0019.severity = error
csharp_style_pattern_matching_over_as_with_null_check = true # Default.

#### Use pattern matching to avoid `is` check followed by a cast.
dotnet_diagnostic.IDE0020.severity = error
dotnet_diagnostic.IDE0038.severity = error
csharp_style_pattern_matching_over_is_with_cast_check = true # Default.

#### Use switch expression.
dotnet_diagnostic.IDE0066.severity = error
csharp_style_prefer_switch_expression = true # Default.

#### Use pattern matching.
dotnet_diagnostic.IDE0078.severity = error
csharp_style_prefer_pattern_matching = true # Default.

#### Use pattern matching (`not` operator).
dotnet_diagnostic.IDE0083.severity = error
csharp_style_prefer_not_pattern = true # Default.

#### Simplify property pattern.
dotnet_diagnostic.IDE0170.severity = error
csharp_style_prefer_extended_property_pattern = true # Default.

### Code block preferences.
#### Add braces.
dotnet_diagnostic.IDE0011.severity = error
csharp_prefer_braces = true:silent# Default.

#### Use simple `using` statement.
dotnet_diagnostic.IDE0063.severity = error
csharp_prefer_simple_using_statement = true:suggestion# Default.

### `using` directive placement.
dotnet_diagnostic.IDE0065.severity = error
csharp_using_directive_placement = inside_namespace:silent

### Require file header.
dotnet_diagnostic.IDE0073.severity = error

## Unnecessary code rules.
### Simplify name.
dotnet_diagnostic.IDE0001.severity = error

### Simplify member access.
dotnet_diagnostic.IDE0002.severity = error

### Remove unnecessary cast.
dotnet_diagnostic.IDE0004.severity = error

### Remove unnecessary using directives.
dotnet_diagnostic.IDE0005.severity = warning

### Remove unreachable code.
dotnet_diagnostic.IDE0035.severity = error

### Remove unused private member.
dotnet_diagnostic.IDE0051.severity = error

### Remove unread private member.
dotnet_diagnostic.IDE0052.severity = error

### Remove unnecessary expression value.
dotnet_diagnostic.IDE0058.severity = none
csharp_style_unused_value_expression_statement_preference = discard_variable # Default.

### Remove unnecessary value assignment.
dotnet_diagnostic.IDE0059.severity = error
csharp_style_unused_value_assignment_preference = discard_variable # Default.

### Remove unused parameter.
dotnet_diagnostic.IDE0060.severity = error
dotnet_code_quality_unused_parameters = all # Default.

### Remove unnecessary suppression.
dotnet_diagnostic.IDE0079.severity = error
dotnet_remove_unnecessary_suppression_exclusions = none # Default.

### Remove unnecessary suppression operator.
dotnet_diagnostic.IDE0080.severity = error

### Remove unnecessary equality operator.
dotnet_diagnostic.IDE0100.severity = error

### Remove unnecessary discard.
dotnet_diagnostic.IDE0110.severity = error

## Formatting rules.
dotnet_diagnostic.IDE0055.severity = error

### .NET formatting options.
#### Using directive options.
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false

#### Dotnet namespace options.
dotnet_style_namespace_match_folder = true

### C# formatting options.
#### New-line options.
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

#### Indentation options.
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = no_change
csharp_indent_switch_labels = true

#### Spacing options.
csharp_space_after_cast = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses =
csharp_space_between_square_brackets = false

#### Wrap options.
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = false

## Code-style naming rules.
dotnet_diagnostic.IDE1006.severity = error
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_prefer_system_threading_lock = true:suggestion

### Naming rules.
# None yet... some ideas for the future:
# - Abstract class names MUST start with a `Base` (e.g. BaseSomeClass).
# - All entity names MUST be PascalCased (e.g. SomeMethod(), SomeClass, SomeProperty).
# - Asynchronous method names MUST end with `Async` (e.g. SomeMethodAsync()).
# - Fields MUST start with a `_` (e.g. _someField).
# - Interface names MUST start with a `I` (e.g. ISomeInterface).
# - Static fields MUST start with a `_` (e.g. _someField).
# - Type names MUST be start with a `T` (e.g. TSomeType).
# - Unit test names MUST consist of 3 segments separated by an underscore (e.g. `MethodUnderTest_ScenarioDescriptor_ExpectedResult`).

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
